name: CD

on:
  push:
    branches:
      - 'master'
    
jobs:
  release-on-push:
    name: Generate release and tag
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      version: ${{ steps.release.outputs.version }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: rymndhng/release-on-push-action@master
        id: release
        with:
          bump_version_scheme: patch
          tag_prefix: v
          use_github_release_notes: true

  build-docker-image:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs:
      - release-on-push
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: haya14busa/action-cond@v1
        name: Target
        id: condval
        with:
          cond: ${{ github.event_name == 'pull_request' }}
          if_true: "development"
          if_false: "production"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ghcr.io/EgorHenek/edm_su_api
          tags: |
            type=sha
            type=semver,pattern={{version}},value=${{needs.release-on-push.outputs.tag_name}}
            type=semver,pattern={{major}}.{{minor}},value=${{needs.release-on-push.outputs.tag_name}}
            type=semver,pattern={{major}},value=${{needs.release-on-push.outputs.tag_name}}
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }} 
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          target: ${{ steps.condval.outputs.value }}
